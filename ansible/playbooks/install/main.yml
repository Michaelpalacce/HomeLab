- hosts: all
  name: Setup prereqs
  become: yes
  any_errors_fatal: yes
  tags:
      - preflight
  vars_files:
      - "./vars/main.yml"
  roles:
      - michaelpalacce.helm
      - michaelpalacce.kubernetes_preflight

- hosts: all
  name: Setup Storage dependencies
  become: yes
  tags:
      - preflight
      - preflight-storage-dependencies
  vars_files:
      - "./vars/main.yml"
  tasks:
      - name: Ensure dependencies are installed
        apt:
            name: "{{ packages }}"
            state: present
        vars:
            packages:
                - open-iscsi
                - nfs-common
                - jq

- hosts: init_master
  name: Setup master k3s
  become: yes
  tags:
      - setup
      - setup-init-master
  vars_files:
      - "./vars/main.yml"
  tasks:
      - name: Get Cluster info
        shell: kubectl cluster-info
        register: cluster_info

      - name: Install k3s
        shell: "{{ item }}"
        with_items:
            - curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--flannel-backend=none --cluster-cidr=10.40.0.0/16 --disable-network-policy --disable=traefik" sh -
            - cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
            - kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
        when: cluster_info.stdout.find( 'Kubernetes control plane\u001b[0m is running at' ) == -1

      - name: Get token
        shell: cat /var/lib/rancher/k3s/server/node-token
        register: nodeToken

      - name: Generate join commands
        shell: "echo 'curl -sfL https://get.k3s.io | K3S_URL={{ k3s_master_url }} K3S_TOKEN={{ nodeToken.stdout }} sh -' >> /tmp/join-command"

      - name: Copy output to local files
        fetch:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            flat: yes
        with_items:
            - src: /tmp/join-command
              dest: "{{ output_dir }}/join-command"
            - src: ~/.kube/config
              dest: "{{ output_dir }}/config"

- hosts: workers
  name: Joins all the workers to the cluster
  tags:
      - setup
      - setup-join-workers
  become: yes
  any_errors_fatal: true
  tasks:
      - name: Copy the join command to server location
        copy:
            src: "output/join-command"
            dest: /tmp/join-command.sh
            mode: 0755

      - name: Join the node to cluster
        command: sh /tmp/join-command.sh

- hosts: init_master
  name: Setup traefik
  become: yes
  tags:
      - init
      - traefik
      - traefik-setup
  tasks:
      - name: Cleanup old potential chart
        file:
            path: traefik
            state: absent

      - name: Ensure new Chart is present
        copy:
            src: ../../../Helm/traefik
            dest: .

      - name: Install traefik namespace
        kubernetes.core.helm:
            name: traefik
            create_namespace: false
            release_namespace: kube-system
            chart_ref: traefik/
            values_files: traefik/values.yaml

      - name: Cleanup chart, we no longer need this
        file:
            path: traefik
            state: absent

- hosts: init_master
  name: Setup dashboard
  become: yes
  tags:
      - init
      - dashboard
      - dashboard-setup
  tasks:
      - name: Cleanup old potential chart
        file:
            path: "{{ dashboard }}"
            state: absent

      - name: Ensure new Chart is present
        copy:
            src: "../../../Helm/apps/dashboards/{{ dashboard }}"
            dest: .

      - name: Install dashboard namespace
        kubernetes.core.helm:
            name: "{{ dashboard }}"
            create_namespace: true
            release_namespace: "{{ dashboard }}"
            chart_ref: "{{ dashboard }}/"
            values_files: "{{ dashboard }}/values.yaml"

      - name: Cleanup chart, we no longer need this
        file:
            path: "{{ dashboard }}"
            state: absent

- hosts: init_master
  name: Setup Longhorn storage
  become: yes
  tags:
      - init
      - storage
      - storage-setup-longhorn
  vars_files:
      - "./vars/main.yml"
  tasks:
      - name: Cleanup old potential chart
        file:
            path: longhorn-system
            state: absent

      - name: Ensure new Chart is present
        copy:
            src: ../../../Helm/longhorn-system
            dest: .

      - name: Install longhorn-system namespace
        kubernetes.core.helm:
            name: longhorn-system
            create_namespace: true
            release_namespace: longhorn-system
            chart_ref: longhorn-system/
            values_files: longhorn-system/values.yaml

      - name: Cleanup chart, we no longer need this
        file:
            path: longhorn-system
            state: absent

      - name: Verify everything is in state Running ( This may take a LONG time if you don't have the images and your internet is slow )
        shell: kubectl get po -n longhorn-system | awk '{ print $3 }'
        register: storage_pods_running
        until: storage_pods_running.stdout.find("ContainerCreating") == -1 and storage_pods_running.stdout.find("BackOff") == -1 and storage_pods_running.stdout.find("Error") == -1 and storage_pods_running.stdout.find("Init") == -1
        retries: 360
        delay: 5
        when: verify_running
