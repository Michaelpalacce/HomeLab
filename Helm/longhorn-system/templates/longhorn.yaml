# https://raw.githubusercontent.com/longhorn/longhorn/v1.1.2/deploy/longhorn.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
    name: longhorn-service-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: longhorn-role
rules:
    - apiGroups:
          - apiextensions.k8s.io
      resources:
          - customresourcedefinitions
      verbs:
          - "*"
    - apiGroups: [""]
      resources: ["pods", "events", "persistentvolumes", "persistentvolumeclaims","persistentvolumeclaims/status", "nodes", "proxy/nodes", "pods/log", "secrets", "services", "endpoints", "configmaps"]
      verbs: ["*"]
    - apiGroups: [""]
      resources: ["namespaces"]
      verbs: ["get", "list"]
    - apiGroups: ["apps"]
      resources: ["daemonsets", "statefulsets", "deployments"]
      verbs: ["*"]
    - apiGroups: ["batch"]
      resources: ["jobs", "cronjobs"]
      verbs: ["*"]
    - apiGroups: ["policy"]
      resources: ["poddisruptionbudgets"]
      verbs: ["*"]
    - apiGroups: ["scheduling.k8s.io"]
      resources: ["priorityclasses"]
      verbs: ["watch", "list"]
    - apiGroups: ["storage.k8s.io"]
      resources: ["storageclasses", "volumeattachments","volumeattachments/status", "csinodes", "csidrivers"]
      verbs: ["*"]
    - apiGroups: ["snapshot.storage.k8s.io"]
      resources: ["volumesnapshotclasses", "volumesnapshots", "volumesnapshotcontents", "volumesnapshotcontents/status"]
      verbs: ["*"]
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["get", "watch", "list", "delete", "update", "create"]
    - apiGroups: ["longhorn.io"]
      resources: ["volumes", "volumes/status", "engines", "engines/status", "replicas", "replicas/status", "settings",
                  "engineimages", "engineimages/status", "nodes", "nodes/status", "instancemanagers", "instancemanagers/status",
                  "sharemanagers", "sharemanagers/status", "backingimages", "backingimages/status",
                  "backingimagemanagers", "backingimagemanagers/status", "backingimagedatasources", "backingimagedatasources/status",
                  "backuptargets", "backuptargets/status", "backupvolumes", "backupvolumes/status", "backups", "backups/status",
                  "recurringjobs", "recurringjobs/status"]
      verbs: ["*"]
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["*"]
    - apiGroups: ["metrics.k8s.io"]
      resources: ["pods", "nodes"]
      verbs: ["get", "list"]
---

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    annotations:
        controller-gen.kubebuilder.io/version: v0.4.0
        api-approved.kubernetes.io: "https://github.com/kubernetes-csi/external-snapshotter/pull/419"
    creationTimestamp: null
    name: volumesnapshots.snapshot.storage.k8s.io
spec:
    group: snapshot.storage.k8s.io
    names:
        kind: VolumeSnapshot
        listKind: VolumeSnapshotList
        plural: volumesnapshots
        singular: volumesnapshot
    scope: Namespaced
    versions:
        - additionalPrinterColumns:
              - description: Indicates if the snapshot is ready to be used to restore a volume.
                jsonPath: .status.readyToUse
                name: ReadyToUse
                type: boolean
              - description: If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.
                jsonPath: .spec.source.persistentVolumeClaimName
                name: SourcePVC
                type: string
              - description: If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.
                jsonPath: .spec.source.volumeSnapshotContentName
                name: SourceSnapshotContent
                type: string
              - description: Represents the minimum size of volume required to rehydrate from this snapshot.
                jsonPath: .status.restoreSize
                name: RestoreSize
                type: string
              - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
                jsonPath: .spec.volumeSnapshotClassName
                name: SnapshotClass
                type: string
              - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.
                jsonPath: .status.boundVolumeSnapshotContentName
                name: SnapshotContent
                type: string
              - description: Timestamp when the point-in-time snapshot was taken by the underlying storage system.
                jsonPath: .status.creationTime
                name: CreationTime
                type: date
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      spec:
                          description: 'spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.'
                          properties:
                              source:
                                  description: source specifies where a snapshot will be created from. This field is immutable after creation. Required.
                                  properties:
                                      persistentVolumeClaimName:
                                          description: persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.
                                          type: string
                                      volumeSnapshotContentName:
                                          description: volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.
                                          type: string
                                  type: object
                                  oneOf:
                                      - required: ["persistentVolumeClaimName"]
                                      - required: ["volumeSnapshotContentName"]
                              volumeSnapshotClassName:
                                  description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.'
                                  type: string
                          required:
                              - source
                          type: object
                      status:
                          description: status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.
                          properties:
                              boundVolumeSnapshotContentName:
                                  description: 'boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.'
                                  type: string
                              creationTime:
                                  description: creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "creation_time" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.
                                  format: date-time
                                  type: string
                              error:
                                  description: error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.
                                  properties:
                                      message:
                                          description: 'message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.'
                                          type: string
                                      time:
                                          description: time is the timestamp when the error was encountered.
                                          format: date-time
                                          type: string
                                  type: object
                              readyToUse:
                                  description: readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "ready_to_use" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown.
                                  type: boolean
                              restoreSize:
                                  type: string
                                  description: restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                          type: object
                  required:
                      - spec
                  type: object
          served: true
          storage: false
          subresources:
              status: {}
        - additionalPrinterColumns:
              - description: Indicates if the snapshot is ready to be used to restore a volume.
                jsonPath: .status.readyToUse
                name: ReadyToUse
                type: boolean
              - description: If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.
                jsonPath: .spec.source.persistentVolumeClaimName
                name: SourcePVC
                type: string
              - description: If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.
                jsonPath: .spec.source.volumeSnapshotContentName
                name: SourceSnapshotContent
                type: string
              - description: Represents the minimum size of volume required to rehydrate from this snapshot.
                jsonPath: .status.restoreSize
                name: RestoreSize
                type: string
              - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
                jsonPath: .spec.volumeSnapshotClassName
                name: SnapshotClass
                type: string
              - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.
                jsonPath: .status.boundVolumeSnapshotContentName
                name: SnapshotContent
                type: string
              - description: Timestamp when the point-in-time snapshot was taken by the underlying storage system.
                jsonPath: .status.creationTime
                name: CreationTime
                type: date
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1beta1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      spec:
                          description: 'spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.'
                          properties:
                              source:
                                  description: source specifies where a snapshot will be created from. This field is immutable after creation. Required.
                                  properties:
                                      persistentVolumeClaimName:
                                          description: persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.
                                          type: string
                                      volumeSnapshotContentName:
                                          description: volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.
                                          type: string
                                  type: object
                              volumeSnapshotClassName:
                                  description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.'
                                  type: string
                          required:
                              - source
                          type: object
                      status:
                          description: status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.
                          properties:
                              boundVolumeSnapshotContentName:
                                  description: 'boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.'
                                  type: string
                              creationTime:
                                  description: creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "creation_time" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.
                                  format: date-time
                                  type: string
                              error:
                                  description: error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.
                                  properties:
                                      message:
                                          description: 'message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.'
                                          type: string
                                      time:
                                          description: time is the timestamp when the error was encountered.
                                          format: date-time
                                          type: string
                                  type: object
                              readyToUse:
                                  description: readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "ready_to_use" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown.
                                  type: boolean
                              restoreSize:
                                  type: string
                                  description: restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                          type: object
                  required:
                      - spec
                  type: object
          served: true
          storage: true
          subresources:
              status: {}
status:
    acceptedNames:
        kind: ""
        plural: ""
    conditions: []
    storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    annotations:
        controller-gen.kubebuilder.io/version: v0.4.0
        api-approved.kubernetes.io: "https://github.com/kubernetes-csi/external-snapshotter/pull/419"
    creationTimestamp: null
    name: volumesnapshotcontents.snapshot.storage.k8s.io
spec:
    group: snapshot.storage.k8s.io
    names:
        kind: VolumeSnapshotContent
        listKind: VolumeSnapshotContentList
        plural: volumesnapshotcontents
        singular: volumesnapshotcontent
    scope: Cluster
    versions:
        - additionalPrinterColumns:
              - description: Indicates if the snapshot is ready to be used to restore a volume.
                jsonPath: .status.readyToUse
                name: ReadyToUse
                type: boolean
              - description: Represents the complete size of the snapshot in bytes
                jsonPath: .status.restoreSize
                name: RestoreSize
                type: integer
              - description: Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.
                jsonPath: .spec.deletionPolicy
                name: DeletionPolicy
                type: string
              - description: Name of the CSI driver used to create the physical snapshot on the underlying storage system.
                jsonPath: .spec.driver
                name: Driver
                type: string
              - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
                jsonPath: .spec.volumeSnapshotClassName
                name: VolumeSnapshotClass
                type: string
              - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.
                jsonPath: .spec.volumeSnapshotRef.name
                name: VolumeSnapshot
                type: string
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshotContent represents the actual "on-disk" snapshot object in the underlying storage system
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      spec:
                          description: spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.
                          properties:
                              deletionPolicy:
                                  description: deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the "DeletionPolicy" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.
                                  enum:
                                      - Delete
                                      - Retain
                                  type: string
                              driver:
                                  description: driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.
                                  type: string
                              source:
                                  description: source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.
                                  properties:
                                      snapshotHandle:
                                          description: snapshotHandle specifies the CSI "snapshot_id" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.
                                          type: string
                                      volumeHandle:
                                          description: volumeHandle specifies the CSI "volume_id" of the volume from which a snapshot should be dynamically taken from. This field is immutable.
                                          type: string
                                  type: object
                                  oneOf:
                                      - required: ["snapshotHandle"]
                                      - required: ["volumeHandle"]
                              volumeSnapshotClassName:
                                  description: name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.
                                  type: string
                              volumeSnapshotRef:
                                  description: volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.
                                  properties:
                                      apiVersion:
                                          description: API version of the referent.
                                          type: string
                                      fieldPath:
                                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                          type: string
                                      kind:
                                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                      name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                      namespace:
                                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                          type: string
                                      resourceVersion:
                                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                          type: string
                                      uid:
                                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                          type: string
                                  type: object
                          required:
                              - deletionPolicy
                              - driver
                              - source
                              - volumeSnapshotRef
                          type: object
                      status:
                          description: status represents the current information of a snapshot.
                          properties:
                              creationTime:
                                  description: creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "creation_time" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.
                                  format: int64
                                  type: integer
                              error:
                                  description: error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.
                                  properties:
                                      message:
                                          description: 'message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.'
                                          type: string
                                      time:
                                          description: time is the timestamp when the error was encountered.
                                          format: date-time
                                          type: string
                                  type: object
                              readyToUse:
                                  description: readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "ready_to_use" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown.
                                  type: boolean
                              restoreSize:
                                  description: restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.
                                  format: int64
                                  minimum: 0
                                  type: integer
                              snapshotHandle:
                                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.
                                  type: string
                          type: object
                  required:
                      - spec
                  type: object
          served: true
          storage: false
          subresources:
              status: {}
        - additionalPrinterColumns:
              - description: Indicates if the snapshot is ready to be used to restore a volume.
                jsonPath: .status.readyToUse
                name: ReadyToUse
                type: boolean
              - description: Represents the complete size of the snapshot in bytes
                jsonPath: .status.restoreSize
                name: RestoreSize
                type: integer
              - description: Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.
                jsonPath: .spec.deletionPolicy
                name: DeletionPolicy
                type: string
              - description: Name of the CSI driver used to create the physical snapshot on the underlying storage system.
                jsonPath: .spec.driver
                name: Driver
                type: string
              - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
                jsonPath: .spec.volumeSnapshotClassName
                name: VolumeSnapshotClass
                type: string
              - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.
                jsonPath: .spec.volumeSnapshotRef.name
                name: VolumeSnapshot
                type: string
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1beta1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshotContent represents the actual "on-disk" snapshot object in the underlying storage system
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      spec:
                          description: spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.
                          properties:
                              deletionPolicy:
                                  description: deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the "DeletionPolicy" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.
                                  enum:
                                      - Delete
                                      - Retain
                                  type: string
                              driver:
                                  description: driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.
                                  type: string
                              source:
                                  description: source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.
                                  properties:
                                      snapshotHandle:
                                          description: snapshotHandle specifies the CSI "snapshot_id" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.
                                          type: string
                                      volumeHandle:
                                          description: volumeHandle specifies the CSI "volume_id" of the volume from which a snapshot should be dynamically taken from. This field is immutable.
                                          type: string
                                  type: object
                              volumeSnapshotClassName:
                                  description: name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.
                                  type: string
                              volumeSnapshotRef:
                                  description: volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.
                                  properties:
                                      apiVersion:
                                          description: API version of the referent.
                                          type: string
                                      fieldPath:
                                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                          type: string
                                      kind:
                                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                      name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                      namespace:
                                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                          type: string
                                      resourceVersion:
                                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                          type: string
                                      uid:
                                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                          type: string
                                  type: object
                          required:
                              - deletionPolicy
                              - driver
                              - source
                              - volumeSnapshotRef
                          type: object
                      status:
                          description: status represents the current information of a snapshot.
                          properties:
                              creationTime:
                                  description: creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "creation_time" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.
                                  format: int64
                                  type: integer
                              error:
                                  description: error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.
                                  properties:
                                      message:
                                          description: 'message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.'
                                          type: string
                                      time:
                                          description: time is the timestamp when the error was encountered.
                                          format: date-time
                                          type: string
                                  type: object
                              readyToUse:
                                  description: readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "ready_to_use" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown.
                                  type: boolean
                              restoreSize:
                                  description: restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.
                                  format: int64
                                  minimum: 0
                                  type: integer
                              snapshotHandle:
                                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.
                                  type: string
                          type: object
                  required:
                      - spec
                  type: object
          served: true
          storage: true
          subresources:
              status: {}
status:
    acceptedNames:
        kind: ""
        plural: ""
    conditions: []
    storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    annotations:
        controller-gen.kubebuilder.io/version: v0.4.0
        api-approved.kubernetes.io: "https://github.com/kubernetes-csi/external-snapshotter/pull/419"
    creationTimestamp: null
    name: volumesnapshotclasses.snapshot.storage.k8s.io
spec:
    group: snapshot.storage.k8s.io
    names:
        kind: VolumeSnapshotClass
        listKind: VolumeSnapshotClassList
        plural: volumesnapshotclasses
        singular: volumesnapshotclass
    scope: Cluster
    versions:
        - additionalPrinterColumns:
              - jsonPath: .driver
                name: Driver
                type: string
              - description: Determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
                jsonPath: .deletionPolicy
                name: DeletionPolicy
                type: string
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      deletionPolicy:
                          description: deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.
                          enum:
                              - Delete
                              - Retain
                          type: string
                      driver:
                          description: driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      parameters:
                          additionalProperties:
                              type: string
                          description: parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.
                          type: object
                  required:
                      - deletionPolicy
                      - driver
                  type: object
          served: true
          storage: false
          subresources: {}
        - additionalPrinterColumns:
              - jsonPath: .driver
                name: Driver
                type: string
              - description: Determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
                jsonPath: .deletionPolicy
                name: DeletionPolicy
                type: string
              - jsonPath: .metadata.creationTimestamp
                name: Age
                type: date
          name: v1beta1
          schema:
              openAPIV3Schema:
                  description: VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced
                  properties:
                      apiVersion:
                          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                      deletionPolicy:
                          description: deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.
                          enum:
                              - Delete
                              - Retain
                          type: string
                      driver:
                          description: driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.
                          type: string
                      kind:
                          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      parameters:
                          additionalProperties:
                              type: string
                          description: parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.
                          type: object
                  required:
                      - deletionPolicy
                      - driver
                  type: object
          served: true
          storage: true
          subresources: {}
status:
    acceptedNames:
        kind: ""
        plural: ""
    conditions: []
    storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: longhorn-bind
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: longhorn-role
subjects:
    - kind: ServiceAccount
      name: longhorn-service-account
      namespace: {{ .Release.Namespace }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Engine
    name: engines.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Engine
        listKind: EngineList
        plural: engines
        shortNames:
            - lhe
        singular: engine
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The current state of the engine
                jsonPath: .status.currentState
              - name: Node
                type: string
                description: The node that the engine is on
                jsonPath: .spec.nodeID
              - name: InstanceManager
                type: string
                description: The instance manager of the engine
                jsonPath: .status.instanceManagerName
              - name: Image
                type: string
                description: The current image of the engine
                jsonPath: .status.currentImage
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Replica
    name: replicas.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Replica
        listKind: ReplicaList
        plural: replicas
        shortNames:
            - lhr
        singular: replica
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The current state of the replica
                jsonPath: .status.currentState
              - name: Node
                type: string
                description: The node that the replica is on
                jsonPath: .spec.nodeID
              - name: Disk
                type: string
                description: The disk that the replica is on
                jsonPath: .spec.diskID
              - name: InstanceManager
                type: string
                description: The instance manager of the replica
                jsonPath: .status.instanceManagerName
              - name: Image
                type: string
                description: The current image of the replica
                jsonPath: .status.currentImage
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Setting
    name: settings.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Setting
        listKind: SettingList
        plural: settings
        shortNames:
            - lhs
        singular: setting
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  x-kubernetes-preserve-unknown-fields: true
          additionalPrinterColumns:
              - name: Value
                type: string
                description: The value of the setting
                jsonPath: .value
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Volume
    name: volumes.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Volume
        listKind: VolumeList
        plural: volumes
        shortNames:
            - lhv
        singular: volume
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The state of the volume
                jsonPath: .status.state
              - name: Robustness
                type: string
                description: The robustness of the volume
                jsonPath: .status.robustness
              - name: Scheduled
                type: string
                description: The scheduled condition of the volume
                jsonPath: .status.conditions['scheduled']['status']
              - name: Size
                type: string
                description: The size of the volume
                jsonPath: .spec.size
              - name: Node
                type: string
                description: The node that the volume is currently attaching to
                jsonPath: .status.currentNodeID
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: EngineImage
    name: engineimages.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: EngineImage
        listKind: EngineImageList
        plural: engineimages
        shortNames:
            - lhei
        singular: engineimage
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: State of the engine image
                jsonPath: .status.state
              - name: Image
                type: string
                description: The Longhorn engine image
                jsonPath: .spec.image
              - name: RefCount
                type: integer
                description: Number of volumes are using the engine image
                jsonPath: .status.refCount
              - name: BuildDate
                type: date
                description: The build date of the engine image
                jsonPath: .status.buildDate
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Node
    name: nodes.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Node
        listKind: NodeList
        plural: nodes
        shortNames:
            - lhn
        singular: node
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: Ready
                type: string
                description: Indicate whether the node is ready
                jsonPath: .status.conditions['Ready']['status']
              - name: AllowScheduling
                type: boolean
                description: Indicate whether the user disabled/enabled replica scheduling for the node
                jsonPath: .spec.allowScheduling
              - name: Schedulable
                type: string
                description: Indicate whether Longhorn can schedule replicas on the node
                jsonPath: .status.conditions['Schedulable']['status']
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: InstanceManager
    name: instancemanagers.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: InstanceManager
        listKind: InstanceManagerList
        plural: instancemanagers
        shortNames:
            - lhim
        singular: instancemanager
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The state of the instance manager
                jsonPath: .status.currentState
              - name: Type
                type: string
                description: The type of the instance manager (engine or replica)
                jsonPath: .spec.type
              - name: Node
                type: string
                description: The node that the instance manager is running on
                jsonPath: .spec.nodeID
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: ShareManager
    name: sharemanagers.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: ShareManager
        listKind: ShareManagerList
        plural: sharemanagers
        shortNames:
            - lhsm
        singular: sharemanager
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The state of the share manager
                jsonPath: .status.state
              - name: Node
                type: string
                description: The node that the share manager is owned by
                jsonPath: .status.ownerID
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: BackingImage
    name: backingimages.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: BackingImage
        listKind: BackingImageList
        plural: backingimages
        shortNames:
            - lhbi
        singular: backingimage
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: Image
                type: string
                description: The backing image name
                jsonPath: .spec.image
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: BackingImageManager
    name: backingimagemanagers.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: BackingImageManager
        listKind: BackingImageManagerList
        plural: backingimagemanagers
        shortNames:
            - lhbim
        singular: backingimagemanager
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The current state of the manager
                jsonPath: .status.currentState
              - name: Image
                type: string
                description: The image the manager pod will use
                jsonPath: .spec.image
              - name: Node
                type: string
                description: The node the manager is on
                jsonPath: .spec.nodeID
              - name: DiskUUID
                type: string
                description: The disk the manager is responsible for
                jsonPath: .spec.diskUUID
              - name: DiskPath
                type: string
                description: The disk path the manager is using
                jsonPath: .spec.diskPath
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: BackingImageDataSource
    name: backingimagedatasources.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: BackingImageDataSource
        listKind: BackingImageDataSourceList
        plural: backingimagedatasources
        shortNames:
            - lhbids
        singular: backingimagedatasource
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: State
                type: string
                description: The current state of the pod used to provisione the backing image file from source
                jsonPath: .status.currentState
              - name: SourceType
                type: string
                description: The data source type
                jsonPath: .spec.sourceType
              - name: Node
                type: string
                description: The node the backing image file will be prepared on
                jsonPath: .spec.nodeID
              - name: DiskUUID
                type: string
                description: The disk the backing image file will be prepared on
                jsonPath: .spec.diskUUID
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: BackupTarget
    name: backuptargets.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: BackupTarget
        listKind: BackupTargetList
        plural: backuptargets
        shortNames:
            - lhbt
        singular: backuptarget
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: URL
                type: string
                description: The backup target URL
                jsonPath: .spec.backupTargetURL
              - name: Credential
                type: string
                description: The backup target credential secret
                jsonPath: .spec.credentialSecret
              - name: Interval
                type: string
                description: The backup target poll interval
                jsonPath: .spec.pollInterval
              - name: Available
                type: boolean
                description: Indicate whether the backup target is available or not
                jsonPath: .status.available
              - name: LastSyncedAt
                type: string
                description: The backup target last synced time
                jsonPath: .status.lastSyncedAt
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: BackupVolume
    name: backupvolumes.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: BackupVolume
        listKind: BackupVolumeList
        plural: backupvolumes
        shortNames:
            - lhbv
        singular: backupvolume
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: CreatedAt
                type: string
                description: The backup volume creation time
                jsonPath: .status.createdAt
              - name: LastBackupName
                type: string
                description: The backup volume last backup name
                jsonPath: .status.lastBackupName
              - name: LastBackupAt
                type: string
                description: The backup volume last backup time
                jsonPath: .status.lastBackupAt
              - name: LastSyncedAt
                type: string
                description: The backup volume last synced time
                jsonPath: .status.lastSyncedAt
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: Backup
    name: backups.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: Backup
        listKind: BackupList
        plural: backups
        shortNames:
            - lhb
        singular: backup
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      spec:
                          x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: SnapshotName
                type: string
                description: The snapshot name
                jsonPath: .status.snapshotName
              - name: SnapshotSize
                type: string
                description: The snapshot size
                jsonPath: .status.size
              - name: SnapshotCreatedAt
                type: string
                description: The snapshot creation time
                jsonPath: .status.snapshotCreatedAt
              - name: State
                type: string
                description: The backup state
                jsonPath: .status.state
              - name: LastSyncedAt
                type: string
                description: The backup last synced time
                jsonPath: .status.lastSyncedAt

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
    labels:
        longhorn-manager: RecurringJob
    name: recurringjobs.longhorn.io
spec:
    group: longhorn.io
    names:
        kind: RecurringJob
        listKind: RecurringJobList
        plural: recurringjobs
        shortNames:
            - lhrj
        singular: recurringjob
    scope: Namespaced
    versions:
        - name: v1beta1
          served: true
          storage: true
          schema:
              openAPIV3Schema:
                  type: object
                  properties:
                      metadata:
                          type: object
                          properties:
                              name:
                                  type: string
                      spec:
                          type: object
                          properties:
                              groups:
                                  type: array
                                  items:
                                      type: string
                              task:
                                  type: string
                                  pattern: "^snapshot|backup$"
                              cron:
                                  type: string
                              retain:
                                  type: integer
                              concurrency:
                                  type: integer
                              labels:
                                  x-kubernetes-preserve-unknown-fields: true
                      status:
                          x-kubernetes-preserve-unknown-fields: true
          subresources:
              status: {}
          additionalPrinterColumns:
              - name: Groups
                type: string
                description: Sets groupings to the jobs. When set to "default" group will be added to the volume label when no other job label exist in volume.
                jsonPath: .spec.groups
              - name: Task
                type: string
                description: Should be one of "backup" or "snapshot".
                jsonPath: .spec.task
              - name: Cron
                type: string
                description: The cron expression represents recurring job scheduling.
                jsonPath: .spec.cron
              - name: Retain
                type: integer
                description: The number of snapshots/backups to keep for the volume.
                jsonPath: .spec.retain
              - name: Concurrency
                type: integer
                description: The concurrent job to run by each cron job.
                jsonPath: .spec.concurrency
              - name: Age
                type: date
                jsonPath: .metadata.creationTimestamp
              - name: Labels
                type: string
                description: Specify the labels
                jsonPath: .spec.labels
---
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: longhorn-default-setting
    namespace: {{ .Release.Namespace }}
data:
    default-setting.yaml: |-
        backup-target:
        backup-target-credential-secret:
        allow-recurring-job-while-volume-detached:
        create-default-disk-labeled-nodes:
        default-data-path:
        replica-soft-anti-affinity:
        replica-auto-balance:
        storage-over-provisioning-percentage:
        storage-minimal-available-percentage:
        upgrade-checker:
        default-replica-count:
        default-data-locality:
        default-longhorn-static-storage-class:
        backupstore-poll-interval:
        taint-toleration:
        system-managed-components-node-selector:
        priority-class:
        auto-salvage:
        auto-delete-pod-when-volume-detached-unexpectedly:
        disable-scheduling-on-cordoned-node:
        replica-zone-soft-anti-affinity:
        node-down-pod-deletion-policy:
        allow-node-drain-with-last-healthy-replica:
        mkfs-ext4-parameters:
        disable-replica-rebuild:
        replica-replenishment-wait-interval:
        concurrent-replica-rebuild-per-node-limit:
        disable-revision-counter:
        system-managed-pods-image-pull-policy:
        allow-volume-creation-with-degraded-availability:
        auto-cleanup-system-generated-snapshot:
        concurrent-automatic-engine-upgrade-per-node-limit:
        backing-image-cleanup-wait-interval:
        backing-image-recovery-wait-interval:
        guaranteed-engine-manager-cpu:
        guaranteed-replica-manager-cpu:
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
    name: longhorn-psp
spec:
    privileged: true
    allowPrivilegeEscalation: true
    requiredDropCapabilities:
        - NET_RAW
    allowedCapabilities:
        - SYS_ADMIN
    hostNetwork: false
    hostIPC: false
    hostPID: true
    runAsUser:
        rule: RunAsAny
    seLinux:
        rule: RunAsAny
    fsGroup:
        rule: RunAsAny
    supplementalGroups:
        rule: RunAsAny
    volumes:
        - configMap
        - downwardAPI
        - emptyDir
        - secret
        - projected
        - hostPath
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: longhorn-psp-role
    namespace: {{ .Release.Namespace }}
rules:
    - apiGroups:
          - policy
      resources:
          - podsecuritypolicies
      verbs:
          - use
      resourceNames:
          - longhorn-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: longhorn-psp-binding
    namespace: {{ .Release.Namespace }}
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: longhorn-psp-role
subjects:
    - kind: ServiceAccount
      name: longhorn-service-account
      namespace: {{ .Release.Namespace }}
    - kind: ServiceAccount
      name: default
      namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: longhorn-storageclass
    namespace: {{ .Release.Namespace }}
data:
    storageclass.yaml: |
        kind: StorageClass
        apiVersion: storage.k8s.io/v1
        metadata:
          name: longhorn
        provisioner: driver.longhorn.io
        allowVolumeExpansion: {{ .Values.longhorn.storageClass.allowVolumeExpansion }}
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        parameters:
          fsType: "ext4"
          numberOfReplicas: "{{ .Values.longhorn.storageClass.parameters.numberOfReplicas }}"
          staleReplicaTimeout: "{{ .Values.longhorn.storageClass.parameters.staleReplicaTimeout }}"
          fromBackup: ""
        #  backingImage: "bi-test"
        #  backingImageDataSourceType: "download"
        #  backingImageDataSourceParameters: '{"url": "https://backing-image-example.s3-region.amazonaws.com/test-backing-image"}'
        #  backingImageChecksum: "SHA512 checksum of the backing image"
        #  diskSelector: "ssd,fast"
        #  nodeSelector: "storage,fast"
        #  recurringJobSelector: '[{"name":"snap-group", "isGroup":true},
        #                          {"name":"backup", "isGroup":false}]'
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
    labels:
        app: longhorn-manager
    name: longhorn-manager
    namespace: {{ .Release.Namespace }}
spec:
    selector:
        matchLabels:
            app: longhorn-manager
    template:
        metadata:
            labels:
                app: longhorn-manager
        spec:
            containers:
                - name: longhorn-manager
                  image: longhornio/longhorn-manager:v1.2.3
                  imagePullPolicy: IfNotPresent
                  securityContext:
                      privileged: true
                  command:
                      - longhorn-manager
                      - -d
                      - daemon
                      - --engine-image
                      - longhornio/longhorn-engine:v1.2.3
                      - --instance-manager-image
                      - longhornio/longhorn-instance-manager:v1_20210731
                      - --share-manager-image
                      - longhornio/longhorn-share-manager:v1_20210914
                      - --backing-image-manager-image
                      - longhornio/backing-image-manager:v2_20210820
                      - --manager-image
                      - longhornio/longhorn-manager:v1.2.3
                      - --service-account
                      - longhorn-service-account
                  ports:
                      - containerPort: 9500
                        name: manager
                  readinessProbe:
                      tcpSocket:
                          port: 9500
                  volumeMounts:
                      - name: dev
                        mountPath: /host/dev/
                      - name: proc
                        mountPath: /host/proc/
                      - name: longhorn
                        mountPath: /var/lib/longhorn/
                        mountPropagation: Bidirectional
                      - name: longhorn-default-setting
                        mountPath: /var/lib/longhorn-setting/
                  env:
                      - name: POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: POD_IP
                        valueFrom:
                            fieldRef:
                                fieldPath: status.podIP
                      - name: NODE_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.nodeName
                      # Should be: mount path of the volume longhorn-default-setting + the key of the configmap data in 04-default-setting.yaml
                      - name: DEFAULT_SETTING_PATH
                        value: /var/lib/longhorn-setting/default-setting.yaml
            volumes:
                - name: dev
                  hostPath:
                      path: /dev/
                - name: proc
                  hostPath:
                      path: /proc/
                - name: longhorn
                  hostPath:
                      path: /var/lib/longhorn/
                - name: longhorn-default-setting
                  configMap:
                      name: longhorn-default-setting
            #      imagePullSecrets:
            #      - name: ""
            #      priorityClassName:
            #      tolerations:
            #      - key: "key"
            #        operator: "Equal"
            #        value: "value"
            #        effect: "NoSchedule"
            #      nodeSelector:
            #        label-key1: "label-value1"
            #        label-key2: "label-value2"
            serviceAccountName: longhorn-service-account
    updateStrategy:
        rollingUpdate:
            maxUnavailable: "100%"
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: longhorn-manager
    name: longhorn-backend
    namespace: {{ .Release.Namespace }}
spec:
    type: ClusterIP
    sessionAffinity: ClientIP
    selector:
        app: longhorn-manager
    ports:
        - name: manager
          port: 9500
          targetPort: manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app: longhorn-ui
    name: longhorn-ui
    namespace: {{ .Release.Namespace }}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: longhorn-ui
    template:
        metadata:
            labels:
                app: longhorn-ui
        spec:
            containers:
                - name: longhorn-ui
                  image: longhornio/longhorn-ui:v1.2.3
                  imagePullPolicy: IfNotPresent
                  securityContext:
                      runAsUser: 0
                  ports:
                      - containerPort: 8000
                        name: http
                  env:
                      - name: LONGHORN_MANAGER_IP
                        value: "http://longhorn-backend:9500"
#      imagePullSecrets:
#        - name: ""
#      priorityClassName:
#      tolerations:
#      - key: "key"
#        operator: "Equal"
#        value: "value"
#        effect: "NoSchedule"
#      nodeSelector:
#        label-key1: "label-value1"
#        label-key2: "label-value2"
---
kind: Service
apiVersion: v1
metadata:
    labels:
        app: longhorn-ui
    name: longhorn-frontend
    namespace: {{ .Release.Namespace }}
spec:
    type: NodePort
    selector:
        app: longhorn-ui
    ports:
        - name: http
          port: 80
          targetPort: http
          nodePort: {{ .Values.longhorn.nodePort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: longhorn-driver-deployer
    namespace: {{ .Release.Namespace }}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: longhorn-driver-deployer
    template:
        metadata:
            labels:
                app: longhorn-driver-deployer
        spec:
            initContainers:
                - name: wait-longhorn-manager
                  image: longhornio/longhorn-manager:v1.2.3
                  command: ['sh', '-c', 'while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1) != "200" ]; do echo waiting; sleep 2; done']
            containers:
                - name: longhorn-driver-deployer
                  image: longhornio/longhorn-manager:v1.2.3
                  imagePullPolicy: IfNotPresent
                  command:
                      - longhorn-manager
                      - -d
                      - deploy-driver
                      - --manager-image
                      - longhornio/longhorn-manager:v1.2.3
                      - --manager-url
                      - http://longhorn-backend:9500/v1
                  env:
                      - name: POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: NODE_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.nodeName
                      - name: SERVICE_ACCOUNT
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.serviceAccountName
                    # Manually set root directory for csi
                    #- name: KUBELET_ROOT_DIR
                    #  value: /var/lib/rancher/k3s/agent/kubelet
                    # For AirGap Installation
                    # Replace PREFIX with your private registry
                    #- name: CSI_ATTACHER_IMAGE
                    #  value: PREFIX/csi-attacher:v3.2.1
                    #- name: CSI_PROVISIONER_IMAGE
                    #  value: PREFIX/csi-provisioner:v2.1.2
                    #- name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
                    #  value: PREFIX/csi-node-driver-registrar:v2.3.0
                    #- name: CSI_RESIZER_IMAGE
                    #  value: PREFIX/csi-resizer:v1.2.0
                    #- name: CSI_SNAPSHOTTER_IMAGE
                    #  value: PREFIX/csi-snapshotter:v3.0.3
                    # Manually specify number of CSI attacher replicas
                    #- name: CSI_ATTACHER_REPLICA_COUNT
                    #  value: "3"
                    # Manually specify number of CSI provisioner replicas
                    #- name: CSI_PROVISIONER_REPLICA_COUNT
                    #  value: "3"
                    #- name: CSI_RESIZER_REPLICA_COUNT
                    #  value: "3"
                    #- name: CSI_SNAPSHOTTER_REPLICA_COUNT
                    #  value: "3"
            #      imagePullSecrets:
            #        - name: ""
            #      priorityClassName:
            #      tolerations:
            #      - key: "key"
            #        operator: "Equal"
            #        value: "value"
            #        effect: "NoSchedule"
            #      nodeSelector:
            #        label-key1: "label-value1"
            #        label-key2: "label-value2"
            serviceAccountName: longhorn-service-account
            securityContext:
                runAsUser: 0
---