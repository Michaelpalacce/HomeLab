{{- $relNamespace := .Release.Namespace -}}

{{- with .Values.cadvisor }}
# Documentation:
# Resource Type: DaemonSet https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
# DaemonSet created: cadvisor
# Namespace: monitoring
#
# Requests: { CPU: 100m, RAM: 200Mi }
# Limits: { CPU: 150m, RAM: 2000Mi } -> Low CPU will result in slower scrape speeds. This should not be an issue but if it is, consider raising the CPU limit ( however this will take more and more resources the more nodes you have )
#
# Notes:
#   1. The annotations attached are for prometheus to know where to scrape. The port comes from the defined port in the container spec
#   2. DaemonSets deploy one instance of the pod on each node, so be careful how much resources you give to this one as cAdvisor is quite resource hungry.
#

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: cadvisor
rules:
    - apiGroups: ['policy']
      resources: ['podsecuritypolicies']
      verbs:     ['use']
      resourceNames:
          - cadvisor

---

apiVersion: v1
kind: ServiceAccount
metadata:
    name: cadvisor
    namespace: {{ $relNamespace }}

---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
    name: cadvisor
spec:
    seLinux:
        rule: RunAsAny
    supplementalGroups:
        rule: RunAsAny
    runAsUser:
        rule: RunAsAny
    fsGroup:
        rule: RunAsAny
    volumes:
        - '*'
    allowedHostPaths:
        - pathPrefix: "/"
        - pathPrefix: "/var/run"
        - pathPrefix: "/sys"
        - pathPrefix: "/var/lib/docker"
        - pathPrefix: "/dev/disk"

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: cadvisor
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cadvisor
subjects:
    - kind: ServiceAccount
      name: cadvisor
      namespace: {{ $relNamespace }}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: cadvisor
    namespace: {{ $relNamespace }}
    annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
spec:
    selector:
        matchLabels:
            name: cadvisor
    template:
        metadata:
            labels:
                name: cadvisor
#           Annotations that will make prometheus scrape the pods for metrics
            annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "{{ .port }}"
        spec:
            serviceAccountName: cadvisor
            {{- with .tolerations }}
            tolerations:
              {{- range . }}
                - key: {{ .key }}
                  effect: {{ .effect }}
                  {{- if .value }}
                  value: {{ .value }}
                  {{- end }}
              {{- end }}
            {{- end }}
            containers:
                - name: cadvisor
                  image: {{ .image }}:{{ .tag }}
                  resources:
                      requests:
                          memory: 200Mi
                          cpu: 100m
                      limits:
                          memory: {{ .limits.memory }}
                          cpu: {{ .limits.cpu }}
                  volumeMounts:
                      - name: rootfs
                        mountPath: /rootfs
                        readOnly: true
                      - name: var-run
                        mountPath: /var/run
                        readOnly: true
                      - name: sys
                        mountPath: /sys
                        readOnly: true
                      - name: docker
                        mountPath: /var/lib/docker
                        readOnly: true
                      - name: disk
                        mountPath: /dev/disk
                        readOnly: true
                  ports:
                      - name: http
                        containerPort: {{ .port }}
                        protocol: TCP
            automountServiceAccountToken: false
            terminationGracePeriodSeconds: 30
            volumes:
                - name: rootfs
                  hostPath:
                      path: /
                - name: var-run
                  hostPath:
                      path: /var/run
                - name: sys
                  hostPath:
                      path: /sys
                - name: docker
                  hostPath:
                      path: /var/lib/docker
                - name: disk
                  hostPath:
                      path: /dev/disk

---
apiVersion: v1
kind: Service
metadata:
    name: cadvisor
    namespace: {{ $relNamespace }}
spec:
    selector:
        name: cadvisor
    ports:
        - name: http
          protocol: TCP
          port: {{ .port }}
{{- end }}