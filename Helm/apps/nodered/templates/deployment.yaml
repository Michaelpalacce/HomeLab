{{- with .Values.nodered }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: nodered
    namespace: {{ $.Release.Namespace }}
    labels:
        app: nodered
spec:
    replicas: 1
    selector:
        matchLabels:
            app: nodered
    template:
        metadata:
            labels:
                app: nodered
            annotations:
              {{- with $ }}
                checksum/config: {{ include (print $.Template.BasePath "/package-json-config.yaml") . | sha256sum }}
              {{- end }}
        spec:
            containers:
                - name: nodered
                  image: {{ .image }}:{{ .tag }}
                  imagePullPolicy: IfNotPresent
{{/*                  lifecycle:*/}}
{{/*                      postStart:*/}}
{{/*                          exec:*/}}
{{/*                              command:*/}}
{{/*                                  - /usr/src/node-red && npm i*/}}
{{- if .resources }}
                  resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                  ports:
                      - name: web
                        containerPort: {{ .port }}
                  volumeMounts:
                      - name: data-config
                        mountPath: /data
{{/*                      - name: config-volume*/}}
{{/*                        mountPath: /usr/src/node-red/package.json*/}}
{{/*                        subPath: package.json*/}}
                  livenessProbe:
                      failureThreshold: 5
                      initialDelaySeconds: 120
                      timeoutSeconds: 5
                      tcpSocket:
                          port: {{ .port }}
                  readinessProbe:
                      failureThreshold: 100
                      initialDelaySeconds: 30
                      timeoutSeconds: 5
                      tcpSocket:
                          port: {{ .port }}

            restartPolicy: Always
            volumes:
                - name: data-config
                  persistentVolumeClaim:
                      claimName: nodered-pvc
                - name: config-volume
                  configMap:
                      name: package-json-config

---

apiVersion: v1
kind: Service
metadata:
    name: nodered
    namespace: {{ $.Release.Namespace }}
spec:
    type: NodePort
    selector:
        app: nodered
    ports:
        - name: nodered
          protocol: TCP
          port: {{ .port }}
          nodePort: {{ .nodePort }}

{{- end }}
