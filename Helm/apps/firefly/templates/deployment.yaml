{{- with .Values.firefly }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: firefly
    namespace: {{ $.Release.Namespace }}
    labels:
        app: firefly
spec:
    replicas: 1
    selector:
        matchLabels:
            app: firefly
    template:
        metadata:
            labels:
                app: firefly
        spec:
            containers:
                - name: firefly
                  image: {{ .image }}:{{ .tag }}
                  imagePullPolicy: IfNotPresent
{{- if .resources }}
                  resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                  ports:
                      - name: web
                        containerPort: {{ .port }}
                  volumeMounts:
                      - name: data
                        mountPath: /var/www/html/storage/upload
                  env:
                      - name: PUID
                        value: "1000"
                      - name: PGID
                        value: "1000"
                      - name: TZ
                        value: "Europe/Sofia"
                      - name: DB_USERNAME
                        value: "{{ .db.username }}"
                      - name: DB_PASSWORD
                        value: "{{ .db.password }}"
                      - name: DB_DATABASE
                        value: "{{ .db.database }}"
                      - name: DB_HOST
                        value: "{{ .db.host }}"
                      - name: DB_PORT
                        value: "{{ .db.port }}"
                      - name: DB_CONNECTION
                        value: "{{ .db.type }}"
                      - name: APP_KEY
                        value: "{{ .appKey }}"
                      - name: APP_URL
                        value: "{{ .appUrl }}"
                      - name: TRUSTED_PROXIES
                        value: "**"
                  livenessProbe:
                      failureThreshold: 5
                      initialDelaySeconds: 120
                      timeoutSeconds: 5
                      tcpSocket:
                          port: {{ .port }}
                  readinessProbe:
                      failureThreshold: 30
                      initialDelaySeconds: 30
                      timeoutSeconds: 5
                      tcpSocket:
                          port: {{ .port }}
            restartPolicy: Always
            volumes:
                - name: data
                  persistentVolumeClaim:
                      claimName: firefly-pvc

---

apiVersion: v1
kind: Service
metadata:
    name: firefly
    namespace: {{ $.Release.Namespace }}
spec:
    type: NodePort
    selector:
        app: firefly
    ports:
        - name: firefly
          protocol: TCP
          port: {{ .port }}
          nodePort: {{ .nodePort }}

{{- end }}
