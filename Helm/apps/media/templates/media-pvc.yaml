---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: shows-volume-nfs-pv
    labels:
        type: nfs
        app: shows
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 500Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/shows"
        server: {{ .Values.storage.nasIp }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: shows-volume-nfs
spec:
    selector:
        matchLabels:
            type: nfs
            app: shows
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 500Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: movies-volume-nfs-pv
    labels:
        type: nfs
        app: movies
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 500Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/movies"
        server: {{ .Values.storage.nasIp }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: movies-volume-nfs
spec:
    selector:
        matchLabels:
            app: movies
            type: nfs
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 500Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: books-volume-nfs-pv
    labels:
        type: nfs
        app: books
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 5Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/books"
        server: {{ .Values.storage.nasIp }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: books-volume-nfs
spec:
    selector:
        matchLabels:
            app: books
            type: nfs
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: transmission-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.transmission.config }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: bazarr-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.bazarr.config }}


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: downloads-volume
spec:
    selector:
        matchLabels:
            app: downloads
            type: nfs
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 500Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: downloads-volume-pv
    labels:
        type: nfs
        app: downloads
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 500Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/downloads"
        server: {{ .Values.storage.nasIp }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: kavita-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.kavita.config }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: overseer-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.overseer.config }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: radarr-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.radarr.config }}

{{/*---*/}}
{{/*apiVersion: v1*/}}
{{/*kind: PersistentVolumeClaim*/}}
{{/*metadata:*/}}
{{/*    name: readarr-config-pvc*/}}
{{/*spec:*/}}
{{/*    accessModes:*/}}
{{/*        - ReadWriteMany*/}}
{{/*    storageClassName: longhorn*/}}
{{/*    resources:*/}}
{{/*        requests:*/}}
{{/*            storage: {{ .Values.storage.readarr.config }}*/}}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: sonarr-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.sonarr.config }}

{{/*---*/}}
{{/*apiVersion: v1*/}}
{{/*kind: PersistentVolumeClaim*/}}
{{/*metadata:*/}}
{{/*    name: jackett-config-pvc*/}}
{{/*spec:*/}}
{{/*    accessModes:*/}}
{{/*        - ReadWriteMany*/}}
{{/*    storageClassName: longhorn*/}}
{{/*    resources:*/}}
{{/*        requests:*/}}
{{/*            storage: {{ .Values.storage.jackett.config }}*/}}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: doplarr-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.doplarr.config }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: prowlarr-config-pvc
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: longhorn
    resources:
        requests:
            storage: {{ .Values.storage.prowlarr.config }}

{{/*---*/}}
{{/*apiVersion: v1*/}}
{{/*kind: PersistentVolumeClaim*/}}
{{/*metadata:*/}}
{{/*    name: tautulli-config-pvc*/}}
{{/*spec:*/}}
{{/*    accessModes:*/}}
{{/*        - ReadWriteMany*/}}
{{/*    storageClassName: longhorn*/}}
{{/*    resources:*/}}
{{/*        requests:*/}}
{{/*            storage: {{ .Values.storage.tautulli.config }}*/}}