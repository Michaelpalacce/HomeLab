---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
    name: media-config-sc
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
    numberOfReplicas: "1"
    dataLocality: "best-effort"
    staleReplicaTimeout: "2800"
    fromBackup: ""


---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: shows-volume-nfs-pv
    labels:
        type: nfs
        app: shows
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 500Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/shows"
        server: {{ .Values.storage.nasIp }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: shows-volume-nfs
spec:
    selector:
        matchLabels:
            type: nfs
            app: shows
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 500Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: movies-volume-nfs-pv
    labels:
        type: nfs
        app: movies
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 500Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/movies"
        server: {{ .Values.storage.nasIp }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: movies-volume-nfs
spec:
    selector:
        matchLabels:
            app: movies
            type: nfs
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 500Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: downloads-volume-pv
    labels:
        type: local
        app: downloads
spec:
    storageClassName: manual
    capacity:
        storage: 100Gi
    accessModes:
        - ReadWriteOnce
    hostPath:
        path: "/mnt/media/downloads"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: downloads-volume
spec:
    selector:
        matchLabels:
            app: downloads
    storageClassName: manual
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 100Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: books-volume-nfs-pv
    labels:
        type: nfs
        app: books
spec:
    storageClassName: nfs-direct
    capacity:
        storage: 5Gi
    accessModes:
        - ReadWriteMany
    nfs:
        path: "/volume1/k3s/media/books"
        server: {{ .Values.storage.nasIp }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: books-volume-nfs
spec:
    selector:
        matchLabels:
            app: books
            type: nfs
    storageClassName: nfs-direct
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 5Gi

---
