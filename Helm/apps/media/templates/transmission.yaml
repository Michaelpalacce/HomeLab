---
{{- with .Values.transmission }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: transmission
    namespace: {{ $.Release.Namespace }}
    labels:
        app.kubernetes.io/instance: transmission
        app.kubernetes.io/name: transmission
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/instance: transmission
            app.kubernetes.io/name: transmission
    template:
        metadata:
            annotations:
                backup.velero.io/backup-volumes: transmission-data
            labels:
                app.kubernetes.io/instance: transmission
                app.kubernetes.io/name: transmission
        spec:
            containers:
                -   name: transmission
                    image: {{ .image }}
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        privileged: false
                        allowPrivilegeEscalation: false
{{- if .resources }}
                    resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                    env:
                        -   name: USER
                            value: {{ .username }}
                        -   name: PASS
                            value: {{ .password }}
                        -   name: PUID
                            value: "1000"
                        -   name: GUID
                            value: "1000"
                    ports:
                        -   name: web
                            containerPort: {{ .port }}
                        -   name: torrent-tcp
                            protocol: TCP
                            containerPort: 51413
                        -   name: torrent-udp
                            protocol: UDP
                            containerPort: 51413
                    volumeMounts:
                        -   name: transmission-data
                            mountPath: /config
                        -   name: downloads-data
                            mountPath: /downloads
                    livenessProbe:
                        failureThreshold: 5
                        initialDelaySeconds: 30
                        timeoutSeconds: 2
                        tcpSocket:
                            port: {{ .port }}
                    startupProbe:
                        failureThreshold: 10
                        timeoutSeconds: 2
                        tcpSocket:
                            port: {{ .port }}

            restartPolicy: Always
            volumes:
                -   name: transmission-data
                    persistentVolumeClaim:
                        claimName: transmission-config-pvc
                -   name: downloads-data
                    nfs:
                        path: "/volume1/k3s/media/downloads"
                        server: "192.168.1.39"

---

apiVersion: v1
kind: Service
metadata:
    name: transmission
    namespace: {{ $.Release.Namespace }}
spec:
    selector:
        app.kubernetes.io/instance: transmission
        app.kubernetes.io/name: transmission
    ports:
        -   name: transmission
            protocol: TCP
            port: {{ .port }}


{{- end }}
