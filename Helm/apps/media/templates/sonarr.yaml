---
{{- with .Values.sonarr }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: sonarr
    namespace: {{ $.Release.Namespace }}
    labels:
        app: sonarr
spec:
    replicas: 1
    selector:
        matchLabels:
            app: sonarr
    template:
        metadata:
            annotations:
                backup.velero.io/backup-volumes: config-data
                prometheus.io/scrape: "true"
                prometheus.io/port: "monitoring"
            labels:
                app: sonarr
        spec:
            containers:
                -   name: exportarr
                    image: {{ .exportarr.image }}
                    args:
                        - sonarr
{{- if .exportarr.resources }}
                    resources:
{{ toYaml .exportarr.resources | indent 22 }}
{{- end }}
                    env:
                        -   name: URL
                            value: "sonarr:{{ .port }}"
                        -   name: PORT
                            value: "{{ .exportarr.port }}"
                    envFrom:
                        -   secretRef:
                                name: sonarr-exportarr
                    ports:
                        -   name: monitoring
                            containerPort: {{ .exportarr.port }}
                    livenessProbe:
                        httpGet:
                            path: /healthz
                            port: monitoring
                        failureThreshold: 5
                        periodSeconds: 10
                    readinessProbe:
                        httpGet:
                            path: /healthz
                            port: monitoring
                        failureThreshold: 5
                        periodSeconds: 10
                -   name: sonarr
                    image: {{ .image }}
                    imagePullPolicy: IfNotPresent
                    env:
                        -   name: PUID
                            value: "0"
                        -   name: GUID
                            value: "0"
{{- if .resources }}
                    resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                    ports:
                        -   name: web
                            containerPort: {{ .port }}
                    volumeMounts:
                        -   name: config-data
                            mountPath: /config
                        -   name: downloads-data
                            mountPath: /downloads
                        -   name: shows-data-nfs
                            mountPath: /shows

            restartPolicy: Always
            volumes:
                -   name: config-data
                    persistentVolumeClaim:
                        claimName: sonarr-config-pvc
                -   name: shows-data-nfs
                    persistentVolumeClaim:
                        claimName: shows-volume-nfs
                -   name: downloads-data
                    persistentVolumeClaim:
                        claimName: downloads-volume
---

apiVersion: v1
kind: Service
metadata:
    name: sonarr
    namespace: {{ $.Release.Namespace }}
spec:
    {{- with .nodePort }}
    type: NodePort
    {{- end }}
    selector:
        app: sonarr
    ports:
        -   name: sonarr
            protocol: TCP
            port: {{ .port }}
          {{- with .nodePort }}
            nodePort: {{ . }}
          {{- end }}

{{- end }}
