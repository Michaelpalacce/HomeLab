---
{{- with .Values.sonarr }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: sonarr
    namespace: {{ $.Release.Namespace }}
    labels:
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
spec:
    replicas: 1
    strategy:
        type: Recreate
    selector:
        matchLabels:
            app.kubernetes.io/instance: sonarr
            app.kubernetes.io/name: sonarr
    template:
        metadata:
            annotations:
                backup.velero.io/backup-volumes: config
            labels:
                app.kubernetes.io/instance: sonarr
                app.kubernetes.io/name: sonarr
        spec:
            containers:
                -   name: sonarr
                    image: {{ .image }}
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        privileged: false
                        allowPrivilegeEscalation: false
                    env:
                        -   name: PUID
                            value: "1000"
                        -   name: GUID
                            value: "1000"
{{- if .resources }}
                    resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                    ports:
                        -   name: web
                            containerPort: {{ .port }}
                    volumeMounts:
                        -   name: config
                            mountPath: /config
                        -   name: downloads-data
                            mountPath: /downloads
                        -   name: shows-data-nfs
                            mountPath: /shows
                    livenessProbe:
                        failureThreshold: 5
                        initialDelaySeconds: 30
                        timeoutSeconds: 2
                        tcpSocket:
                            port: {{ .port }}
                    startupProbe:
                        failureThreshold: 10
                        timeoutSeconds: 2
                        tcpSocket:
                            port: {{ .port }}
            restartPolicy: Always
            volumes:
                - name: shows-data-nfs
                  nfs:
                      path: "/volume1/k3s/media/shows"
                      server: "192.168.1.39"
                - name: downloads-data
                  nfs:
                      path: "/volume1/k3s/media/downloads"
                      server: "192.168.1.39"
                - name: config
                  persistentVolumeClaim:
                      claimName: sonarr-config-pvc
---

apiVersion: v1
kind: Service
metadata:
    name: sonarr
    namespace: {{ $.Release.Namespace }}
spec:
    selector:
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
    ports:
        -   name: sonarr
            protocol: TCP
            port: {{ .port }}

{{- end }}
