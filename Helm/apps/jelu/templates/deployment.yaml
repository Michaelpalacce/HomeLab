{{- with .Values.jelu }}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: jelu
    namespace: {{ $.Release.Namespace }}
    labels:
        app: jelu
spec:
    replicas: {{ .replicas }}
    selector:
        matchLabels:
            app: jelu
    template:

        metadata:
            labels:
                app: jelu
        spec:
            containers:
                -   name: jelu
                    image: {{ .image }}
                    imagePullPolicy: IfNotPresent
{{- if .resources }}
                    resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                    ports:
                        -   name: web
                            containerPort: {{ .port }}
                    volumeMounts:
                        -   mountPath: /config
                            name: config
                        -   mountPath: /database
                            name: database
                        -   mountPath: /files/images
                            name: images
                        -   mountPath: /files/imports
                            name: imports

            restartPolicy: Always
            volumes:
                -   name: config
                    persistentVolumeClaim:
                        claimName: config-pvc
                -   name: database
                    persistentVolumeClaim:
                        claimName: database-pvc
                -   name: images
                    persistentVolumeClaim:
                        claimName: images-pvc
                -   name: imports
                    persistentVolumeClaim:
                        claimName: imports-pvc

---

apiVersion: v1
kind: Service
metadata:
    name: jelu
    namespace: {{ $.Release.Namespace }}
spec:
    {{- with .nodePort }}
    type: NodePort
    {{- end }}
    selector:
        app: jelu
    ports:
        -   name: jelu
            protocol: TCP
            port: {{ .port }}
          {{- with .nodePort }}
            nodePort: {{ . }}
          {{- end }}

{{- end }}
