---
{{- with .Values.website }}
apiVersion: apps/v1
kind: Deployment
metadata:
    name: website
    namespace: {{ $.Release.Namespace }}
    labels:
        app.kubernetes.io/instance: website
        app.kubernetes.io/name: website
spec:
    replicas: {{ .replicas }}
    selector:
        matchLabels:
            app.kubernetes.io/instance: website
            app.kubernetes.io/name: website
    template:
        metadata:
            labels:
                app.kubernetes.io/instance: website
                app.kubernetes.io/name: website
        spec:
            restartPolicy: Always
            securityContext:
                fsGroup: 1000
                fsGroupChangePolicy: OnRootMismatch
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                              labelSelector:
                                  matchLabels:
                                      app.kubernetes.io/name: website
                              namespaces:
                                  - {{ $.Release.Namespace }}
                              topologyKey: kubernetes.io/hostname
                          weight: 1
            containers:
                -   name: website
                    image: {{ .image }}
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        privileged: false
                        allowPrivilegeEscalation: false
{{- if .resources }}
                    resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
                    ports:
                        -   name: web
                            containerPort: {{ .port }}
                    envFrom:
                        - secretRef:
                              name: website
                              optional: false
                    env:
                        - name: CV_PATH
                          value: "/cv/CV.pdf"
                    volumeMounts:
                        - name: cv
                          mountPath: /cv
                    livenessProbe:
                        failureThreshold: 2
                        initialDelaySeconds: 10
                        timeoutSeconds: 2
                        httpGet:
                            path: /
                            port: {{ .port }}
                    startupProbe:
                        failureThreshold: 5
                        timeoutSeconds: 2
                        httpGet:
                            path: /
                            port: {{ .port }}
            volumes:
                - name: cv
                  nfs:
                      path: "/volume1/k3s/CV"
                      server: "192.168.1.39"

{{- end }}
